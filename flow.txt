A. Xử Lý Tài Liệu (Document Processing)
	1. Input Documents
		Loader (loader.py):
			Đọc nhiều định dạng file (.txt, .pdf, .docx...)
			OCR cho file ảnh (ocr.py)
			Trích xuất metadata
	2. Processing
		Chunking (chunker.py):
			###Chunk còn bị khá nhiều lỗi logic.
			Phân đoạn theo semantic units
			Giữ ngữ cảnh và cấu trúc
			Overlap để đảm bảo liên kết
### Khả năng đang gặp vấn đề chunking (AI 0 nhận kết quả)
		Embedding (embedder.py):
			Vectorize chunks
			Chuẩn hóa vectors
		Storage (store.py):
			Lưu vào FAISS vector store
			Index để tìm kiếm nhanh
B. Query Pipeline	
	1. Frontend (templates & static)
		index.html: Giao diện chat
		script.js: Xử lý tương tác
		chat.js: Quản lý hội thoại
	2. API Layer (app.py)
		REST endpoints
		Xử lý request/response
		Stream kết quả
	3. Backend Processing
		Query Embedding:
		Chuyển câu hỏi thành vector
		Cùng embedding model với documents
		Retrieval (qa.py):
			Load vector store
			Similarity search (top-k=3)
			Rank kết quả
			Generation:
				Build prompt (prompt.py)
### Prompt bị lỗi (maybe do prompt chưa được proper => Kết quả said no)
				Gọi LLM
				Generate response
	4. Post-processing
		Format kết quả
		Stream về frontend
		Lưu lịch sử hội thoại
C. Configuration (config.py)
	Model settings
	Hyperparameters
	System configs
Những điểm cải tiến chính:
	Tách rõ document processing và query pipeline
	Thêm post-processing cho kết quả
	Centralize configuration
	Tối ưu retrieval với ranking
	Stream response để UX tốt hơn

###Thời gian response lâu 


python create_vectorstore.py --folder data --collection docs --cloud